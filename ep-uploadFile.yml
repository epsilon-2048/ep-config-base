spring:
  rabbitmq:
    host: management.deschen.cn
    port: 5672
    username: deschen
    password: root123
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://management.deschen.cn:3306/ep_file?characterEncoding=utf-8&useSSL=false
    username: root
    password: root123
    initialSize: 5
    minIdle: 5
    maxWait: 60000
    maxActive: 20
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
  redis:
    cluster:
      #集群信息
      nodes: 112.74.39.181:6080,112.74.39.181:6083,112.74.39.181:6081,203.195.191.48:6082,203.195.191.48:6085,203.195.191.48:6084
      #默认值是5 一般当此值设置过大时，容易报：Too many Cluster redirections
      maxRedirects: 5
    # springboot版本为1.4RELEASE后中的RedisProperties配置文件类，从图中可知pool属性则被封装到了内部静态类Jedis和Lettuce中去了
    jedis:
      pool:
        max-idle: 8  # 最大连接数
        min-idle: 0  # 最小连接数
        max-wait: -1  # 无限等待
    timeout: 30000
    database: 1
    password: rjgc2016
  servlet:
    multipart:
      max-file-size: 1024MB  # 最大文件大小
      max-request-size: 1024MB # 最大请求大小
eureka:
  instance:
    prefer-ip-address: true # 当调用getHostname获取实例的hostname时，返回ip而不是host名称
    #    ip-address: 127.0.0.1 # 指定自己的ip信息，不指定的话会自己寻找
    instance-id: ${spring.application.name}:${server.port} # DESKTOP-2MVEC12:user-service:8081：是示例的名称，instance-id是区分同一服务的不同实例的唯一标准，因此不能重复
    # status-page-url.: http://127.0.0.1:${server.port}/swagger-ui.html
  # Spring Cloud Feign 支持对请求和响应进行GZIP压缩，以减少通信过程中的性能损耗。通过下面的参数即可开启请求与响应的压缩功能
# `@FeignClient`注解修改的客户端在被代理时，都会创建一个新的Fegin.Logger实例。我们需要额外指定这个日志的级别才可以。
logging:
  level:
    cn.ep: debug
#新版配置，否则后面dashboard无法找到hystrix.stream
management:
  endpoints:
    web:
      exposure:
        include: '*'
# 开启feign熔断，不然不能在Hystrix-dashoard
feign:
  hystrix:
    enabled: true
hystrix:
  command:
    default:  # 默认全局
      execution:
        timeout:
          enable: true
        isolation:
          thread:
            timeoutInMilliseconds: 12000 # 设置hystrix的超时时间为6000ms，默认1000ms
ribbon:
  ConnectTimeout: 1000 # 连接超时时间(ms)
  ReadTimeout: 2000 # 通信超时时间(ms)
  MaxAutoRetriesNextServer: 1 # 同一服务不同实例的重试次数
  MaxAutoRetries: 1 # 同一实例的重试次数
mybatis:
  mapper-locations: classpath:/mybatis/mapper/*.xml
  config-location: classpath:/mybatis/mybatis-config.xml
  type-aliases-package: cn.ep.bean
## pageHelper插件配置
pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql
fdfs:
  connect-timeout: 600
  so-timeout: 2500
  thumb-image:
    height: 60
    width: 60
  tracker-list:
    - 139.196.120.94:22122
ep:
  pageSize: 12
  upload:
    allowTypes:
      - image/jpeg
      - image/png
      - image/bmp
      - image/gif
      - video/x-msvideo  # avi
      - video/mpeg  # mpg
      - audio/mpeg  # mp3
    baseUrl: http://139.196.120.94/
    pageSize: 12
    worker:
      workerId: 1
      datacenterId: 1